{"version":3,"sources":["Hooks/useCart.js","Hooks/useCounter.js","Hooks/useActions.js","Data/Util.js","Components/Counter.styles.js","Styles/Theme.js","Components/Counter.js","App.js","reportWebVitals.js","index.js"],"names":["useCart","useState","cart","setCart","addItem","item","push","removeItem","pop","useCounter","count","setCount","incrementCounter","decrementCounter","useActions","onClickIncrementItem","onClickRemoveItem","swal","EXAMPLE_ITEM","name","descripton","AppLayoutMain","styled","div","CounterItemCount","span","Button","button","Footer","Counter","timeOnPage","setTimeOnPage","useEffect","interval","setInterval","updateItems","intervalSeconds","clearInterval","cartItems","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAoBeA,EAnBC,WACd,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAUA,MAAO,CACLD,OACAC,UACAC,QAZc,SAACC,GAEf,OADAH,EAAKI,KAAKD,GACHH,GAWPK,WATiB,SAACF,GAElB,OADAH,EAAKM,IAAIH,GACFH,KCUIO,EAlBI,WACjB,MAA0BR,mBAAS,GAAnC,mBAAOS,EAAP,KAAcC,EAAd,KAUA,MAAO,CACLD,QACAE,iBAVuB,WACvBD,EAASD,EAAQ,IAUjBG,iBAPuB,WACvBF,EAASD,EAAQ,M,iBCsBNI,EA3BI,SAACT,GAClB,MAAsDI,IAA9CG,EAAR,EAAQA,iBAAkBF,EAA1B,EAA0BA,MAAOG,EAAjC,EAAiCA,iBACjC,EAA+Cb,IAAvCG,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,QAASG,EAA1B,EAA0BA,WAAYL,EAAtC,EAAsCA,KAgBtC,MAAO,CACLa,qBAf2B,WAC3BZ,EAAQC,EAAQC,IAChBO,KAcAI,kBAXwB,WACpBN,GAAS,GACXP,EAAQI,EAAWF,IACnBQ,KAEAI,IAAK,mCAOPP,QACAP,UACAD,SC3BSgB,EAAe,CAC1BC,KAAM,OACNC,WAAY,W,cCCDC,EAAgBC,IAAOC,IAAV,0KASbC,EAAmBF,IAAOG,KAAV,uNAWhBC,EAASJ,IAAOK,OAAV,iQCtBT,SDqCGC,EAASN,IAAOC,IAAV,uK,OEGJM,EA/BC,WACd,IACA,EACEf,EAAWI,GADLH,EAAR,EAAQA,qBAAsBC,EAA9B,EAA8BA,kBAAmBN,EAAjD,EAAiDA,MAAOP,EAAxD,EAAwDA,QAASD,EAAjE,EAAiEA,KAGjE,EAAoCD,mBAAS,GAA7C,mBAAO6B,EAAP,KAAmBC,EAAnB,KAEAC,qBAAU,WACR,IAAMC,EAAWC,aAAY,WAC3BH,GAAc,SAACD,GAAD,OAAgBA,EARV,MASpBK,EAAYjC,KACXkC,KACH,OAAO,kBAAMC,cAAcJ,MAC1B,IAEH,IAAME,EAAc,SAACG,GACnBnC,EAAQmC,IAGV,OACE,qCACE,eAACjB,EAAD,WACE,cAACG,EAAD,kCAAoCd,KACpC,cAACgB,EAAD,CAAQa,QAASxB,EAAjB,sBACA,cAACW,EAAD,CAAQa,QAASvB,EAAjB,4BAEF,eAACY,EAAD,2BAAsBE,EAAtB,YC5BSU,EAJH,WACV,OAAO,cAAC,EAAD,KCOMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.dd3e0f39.chunk.js","sourcesContent":["import { useState } from \"react\";\nconst useCart = () => {\n  const [cart, setCart] = useState([]);\n  const addItem = (item) => {\n    cart.push(item);\n    return cart;\n  };\n  const removeItem = (item) => {\n    cart.pop(item);\n    return cart;\n  };\n\n  return {\n    cart,\n    setCart,\n    addItem,\n    removeItem,\n  };\n};\n\nexport default useCart;\n","import { useState } from \"react\";\nconst useCounter = () => {\n  const [count, setCount] = useState(0);\n\n  const incrementCounter = () => {\n    setCount(count + 1);\n  };\n\n  const decrementCounter = () => {\n    setCount(count - 1);\n  };\n\n  return {\n    count,\n    incrementCounter,\n    decrementCounter,\n  };\n};\n\nexport default useCounter;\n","import React from \"react\";\nimport useCart from \"./useCart\";\nimport useCounter from \"./useCounter\";\nimport swal from \"sweetalert\";\nconst useActions = (item) => {\n  const { incrementCounter, count, decrementCounter } = useCounter();\n  const { setCart, addItem, removeItem, cart } = useCart();\n\n  const onClickIncrementItem = () => {\n    setCart(addItem(item));\n    incrementCounter();\n  };\n\n  const onClickRemoveItem = () => {\n    if (count >= 1) {\n      setCart(removeItem(item));\n      decrementCounter();\n    } else {\n      swal(\"You can not remove more items \");\n    }\n  };\n\n  return {\n    onClickIncrementItem,\n    onClickRemoveItem,\n    count,\n    setCart,\n    cart,\n  };\n};\n\nexport default useActions;\n","export const EXAMPLE_ITEM = {\n  name: \"Item\",\n  descripton: \"A item.\",\n};\n","import styled from \"styled-components\";\nimport { breakpoints } from \"../Styles/Theme\";\n\nexport const AppLayoutMain = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  min-height: 100vh;\n`;\n\nexport const CounterItemCount = styled.span`\n  font-family: var(--main-font);\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 22px;\n  text-align: center;\n  letter-spacing: -0.408px;\n  color: red;\n`;\n\nexport const Button = styled.button`\n  background: red;\n  color: white;\n  width: 10%;\n  font-size: 14px;\n  font-weight: 600;\n  margin: 4px;\n  padding: 8px 4px;\n  border: 2px solid red;\n  border-radius: 1px;\n  @media (max-width: ${breakpoints.mobile}) {\n    width: 50%;\n  }\n`;\n\nexport const Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  height: 60px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","export const breakpoints = {\n  mobile: \"800px\",\n};\n","import React, { useEffect, useState } from \"react\";\nimport useActions from \"../Hooks/useActions\";\nimport { EXAMPLE_ITEM } from \"../Data/Util\";\nimport {\n  AppLayoutMain,\n  CounterItemCount,\n  Button,\n  Footer,\n} from \"./Counter.styles\";\n\nconst Counter = () => {\n  const intervalSeconds = 30;\n  const { onClickIncrementItem, onClickRemoveItem, count, setCart, cart } =\n    useActions(EXAMPLE_ITEM);\n\n  const [timeOnPage, setTimeOnPage] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTimeOnPage((timeOnPage) => timeOnPage + intervalSeconds);\n      updateItems(cart);\n    }, intervalSeconds * 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const updateItems = (cartItems) => {\n    setCart(cartItems);\n  };\n\n  return (\n    <>\n      <AppLayoutMain>\n        <CounterItemCount>{`Items in Cart ${count}`}</CounterItemCount>\n        <Button onClick={onClickIncrementItem}>Add Item</Button>\n        <Button onClick={onClickRemoveItem}>Remove Item</Button>\n      </AppLayoutMain>\n      <Footer>Time on page {timeOnPage} s</Footer>\n    </>\n  );\n};\n\nexport default Counter;\n","import React from \"react\";\nimport \"./App.css\";\nimport Counter from \"./Components/Counter\";\n\nconst App = () => {\n  return <Counter></Counter>;\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}